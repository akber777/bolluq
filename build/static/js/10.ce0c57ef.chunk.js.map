{"version":3,"sources":["components/title/title.js","components/pagination/pagination.js","components/menu/productsMenu.js","pages/productsExternal.js"],"names":["Title","title","className","React","memo","CustomPagination","total","defaultCurrent","pageSize","setPage","onChange","e","showSizeChanger","showLessItems","ProductsMenu","data","type","pathname","useLocation","searchRef","useRef","allSpan","useEffect","searchSpan","to","ref","current","placeholder","width","height","viewBox","fill","xmlns","d","undefined","dryFood","map","item","slug","split","length","toUpperCase","id","onClick","forEach","element","classList","remove","target","add","confectionery","ProductsExternal","useState","page","totalRef","useParams","useQuery","foreignBrands","refetchOnWindowFocus","onSuccess","succ","meta","isLoading","index","lg","image","src","alt","per_page"],"mappings":"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","file":"static/js/10.ce0c57ef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <div className=\"layerTitle\">\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(Title);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst CustomPagination = ({ total, defaultCurrent, pageSize, setPage }) => {\r\n  return (\r\n    <Pagination\r\n      onChange={(e) => setPage(e)}\r\n      showSizeChanger={false}\r\n      showLessItems={false}\r\n      pageSize={pageSize}\r\n      defaultCurrent={defaultCurrent}\r\n      total={total}\r\n    />\r\n  );\r\n};\r\n\r\nCustomPagination.propTypes = {\r\n  setPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(CustomPagination);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\nimport { searchSpan } from \"../../helper/helper\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// css\r\nimport \"../../assets/css/_menu.scss\";\r\n\r\nconst ProductsMenu = ({ data, type }) => {\r\n  const { pathname } = useLocation();\r\n  const searchRef = useRef([]);\r\n  const allSpan = useRef([]);\r\n\r\n  useEffect(() => {\r\n    searchSpan(searchRef);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <NavLink to={\"/our-products\"}>BİZİM MARKALAR</NavLink>\r\n      <NavLink to={\"/external-products\"}>XARİCİ MARKALAR</NavLink>\r\n      <div className=\"menu__details\">\r\n        <div className=\"menu__details--item\">\r\n          <div className=\"menu__detailsSearch\">\r\n            <input\r\n              ref={(e) => (searchRef.current[0] = e)}\r\n              type=\"search\"\r\n              placeholder=\"Quru qida axtar...\"\r\n            />\r\n            <svg\r\n              width=\"17\"\r\n              height=\"17\"\r\n              viewBox=\"0 0 17 17\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M12.1498 10.6918H11.3819L11.1098 10.4294C12.0623 9.32133 12.6358 7.88279 12.6358 6.3179C12.6358 2.82847 9.80732 0 6.3179 0C2.82847 0 0 2.82847 0 6.3179C0 9.80732 2.82847 12.6358 6.3179 12.6358C7.88279 12.6358 9.32133 12.0623 10.4294 11.1098L10.6918 11.3819V12.1498L15.5517 17L17 15.5517L12.1498 10.6918ZM6.3179 10.6918C3.89766 10.6918 1.94397 8.73814 1.94397 6.3179C1.94397 3.89766 3.89766 1.94397 6.3179 1.94397C8.73814 1.94397 10.6918 3.89766 10.6918 6.3179C10.6918 8.73814 8.73814 10.6918 6.3179 10.6918Z\"\r\n                fill=\"#C4C4C4\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className=\"parent\">\r\n            {data !== undefined &&\r\n              data.dryFood.map((item) => (\r\n                <Link to={`/${type}/category/${item.slug}`} key={item.id}>\r\n                  <span\r\n                    className={\r\n                      pathname\r\n                        .split(\"/\")\r\n                        [pathname.split(\"/\").length - 1].toUpperCase() ==\r\n                      item.title.toUpperCase()\r\n                        ? \"activeSpan\"\r\n                        : \"\"\r\n                    }\r\n                    ref={(e) => (allSpan.current[item.id] = e)}\r\n                    onClick={(e) => {\r\n                      allSpan.current.forEach((element) => {\r\n                        element.classList.remove(\"activeSpan\");\r\n                      });\r\n                      e.target.classList.add(\"activeSpan\");\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </span>\r\n                </Link>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"menu__details--item\">\r\n          <div className=\"menu__detailsSearch\">\r\n            <input\r\n              ref={(e) => (searchRef.current[1] = e)}\r\n              type=\"search\"\r\n              placeholder=\"Qənnadi axtar...\"\r\n            />\r\n            <svg\r\n              width=\"17\"\r\n              height=\"17\"\r\n              viewBox=\"0 0 17 17\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M12.1498 10.6918H11.3819L11.1098 10.4294C12.0623 9.32133 12.6358 7.88279 12.6358 6.3179C12.6358 2.82847 9.80732 0 6.3179 0C2.82847 0 0 2.82847 0 6.3179C0 9.80732 2.82847 12.6358 6.3179 12.6358C7.88279 12.6358 9.32133 12.0623 10.4294 11.1098L10.6918 11.3819V12.1498L15.5517 17L17 15.5517L12.1498 10.6918ZM6.3179 10.6918C3.89766 10.6918 1.94397 8.73814 1.94397 6.3179C1.94397 3.89766 3.89766 1.94397 6.3179 1.94397C8.73814 1.94397 10.6918 3.89766 10.6918 6.3179C10.6918 8.73814 8.73814 10.6918 6.3179 10.6918Z\"\r\n                fill=\"#C4C4C4\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className=\"parent\">\r\n            {data !== undefined &&\r\n              data.confectionery.map((item) => (\r\n                <Link to={`/${type}/category/${item.slug}`} key={item.id}>\r\n                  <span\r\n                    className={\r\n                      pathname\r\n                        .split(\"/\")\r\n                        [pathname.split(\"/\").length - 1].toUpperCase() ==\r\n                      item.title.toUpperCase()\r\n                        ? \"activeSpan\"\r\n                        : \"\"\r\n                    }\r\n                    ref={(e) => (allSpan.current[item.id] = e)}\r\n                    onClick={(e) => {\r\n                      allSpan.current.forEach((element) => {\r\n                        element.classList.remove(\"activeSpan\");\r\n                      });\r\n                      e.target.classList.add(\"activeSpan\");\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </span>\r\n                </Link>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProductsMenu.propTypes = {\r\n  data: PropTypes.object,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(ProductsMenu);\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\nimport Title from \"../components/title/title\";\r\nimport ProductsMenu from \"../components/menu/productsMenu\";\r\nimport CustomPagination from \"../components/pagination/pagination\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { foreignBrands } from \"../queries/queries\";\r\n\r\n// css\r\nimport \"../assets/css/_products.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductsExternal = () => {\r\n  const [page, setPage] = useState(0);\r\n  const totalRef = useRef(null);\r\n  const { slug } = useParams();\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [\"foreignBrands\", slug !== undefined ? \"/\" + slug : \"\", page],\r\n    foreignBrands,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      onSuccess: function (succ) {\r\n        totalRef.current = succ.meta;\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <Title title={\"MƏHSULLAR\"} />\r\n      <Container>\r\n        <div className=\"products__wrapper\">\r\n          <ProductsMenu type=\"external-products\" data={data} />\r\n          <div className=\"products__info\">\r\n            <Row>\r\n              {isLoading === false &&\r\n                data !== undefined &&\r\n                data.data.map((item, index) => (\r\n                  <Col lg=\"4\" key={index}>\r\n                    <Link\r\n                      to={\r\n                        slug !== undefined\r\n                          ? `/products-detail/${item.slug}`\r\n                          : `/external-products/category/${item.slug}`\r\n                      }\r\n                    >\r\n                      <div className=\"productSlider__items\">\r\n                        <div className=\"productSlider__items--img\">\r\n                          <img\r\n                            data-fancybox=\"gallery\"\r\n                            data-src={item.image}\r\n                            src={item.image}\r\n                            alt={item.title}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </Col>\r\n                ))}\r\n            </Row>\r\n            <div className=\"d-flex justify-content-center\">\r\n              {totalRef.current !== null &&\r\n                totalRef.current.total > totalRef.current.per_page && (\r\n                  <CustomPagination\r\n                    defaultCurrent={1}\r\n                    total={totalRef.current.total}\r\n                    pageSize={totalRef.current.per_page}\r\n                    setPage={setPage}\r\n                  />\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProductsExternal);\r\n"],"sourceRoot":""}